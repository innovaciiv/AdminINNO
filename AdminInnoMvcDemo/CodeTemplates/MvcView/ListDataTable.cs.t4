<#@ template language="C#" HostSpecific="True" #>
<#@ output extension=".cshtml" #>
<#@ include file="Imports.include.t4" #>
@model IEnumerable<#= "<" + ViewDataTypeName + ">" #>
<#
// The following chained if-statement outputs the file header code and markup for a partial view, a view using a layout page, or a regular view.
if(IsPartialView) {
#>

<#
} else if(IsLayoutPageSelected) {
#>

@{
    ViewBag.Title = "<#= ViewName#>";
<#
if (!String.IsNullOrEmpty(LayoutPageFile)) {
#>
    Layout = "<#= LayoutPageFile#>";
<#
}
#>
}

<link href="~/Areas/Admin/AdminInno/plagins/dataTables/dataTables.bootstrap.css" rel="stylesheet" />
<link href="~/Areas/Admin/AdminInno/plagins/dataTables/dataTables.responsive.css" rel="stylesheet" />
<link href="~/Areas/Admin/AdminInno/plagins/dataTables/dataTables.tableTools.min.css" rel="stylesheet" />

<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-lg-10">
        <h2>Data Tables</h2>
        <ol class="breadcrumb">
            <li>
                <a href="index.html">Home</a>
            </li>
            <li>
                <a>Tables</a>
            </li>
            <li class="active">
                <strong><#= ViewName#></strong>
            </li>
        </ol>
    </div>
    <div class="col-lg-2">

    </div>
</div>

<#
} else {
#>

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title><#= ViewName #></title>
</head>
<body>
<#
    PushIndent("    ");
}
#>
<#
IEnumerable<PropertyMetadata> properties = ModelMetadata.Properties;
#>
<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="ibox-title">
                    <h5>Basic Data Tables example with responsive plugin</h5>
                    <div class="ibox-tools">
                        <a class="collapse-link">
                            <i class="fa fa-chevron-up"></i>
                        </a>
                        <a class="dropdown-toggle" data-toggle="dropdown" href="#">
                            <i class="fa fa-wrench"></i>
                        </a>
                        <ul class="dropdown-menu dropdown-user">
                            <li>
                                <a href="#">Config option 1</a>
                            </li>
                            <li>
                                <a href="#">Config option 2</a>
                            </li>
                        </ul>
                        <a class="close-link">
                            <i class="fa fa-times"></i>
                        </a>
                    </div>
                </div>
                <div class="ibox-content">
				<table class="table table-striped table-bordered table-hover dataTables-example">
					<thead>
						<tr>
<#
foreach (PropertyMetadata property in properties) {
    if (property.Scaffold && !property.IsPrimaryKey && !property.IsForeignKey) {
#>
<#
        // We do not want to show any association properties for which there is
        // no associated foreign key.
        if (property.IsAssociation && GetRelatedModelMetadata(property) == null) {
            continue;
        }
#>
							<th>
								@Html.DisplayNameFor(model => model.<#= GetValueExpression(property) #>)
							</th>
<#
    }
}
#>
							<th></th>
						</tr>
				</thead>
				<tbody>
					@foreach (var item in Model) 
					{
						<tr>
<#
foreach (PropertyMetadata property in properties) {
    if (property.Scaffold && !property.IsPrimaryKey && !property.IsForeignKey) {
#>
<#
        // We do not want to show any association properties for which there is
        // no associated foreign key.
        if (property.IsAssociation && GetRelatedModelMetadata(property) == null) {
            continue;
        }
#>
							<td>
								@Html.DisplayFor(modelItem => <#= "item." + GetValueExpression(property) #>)
							</td>
<#
    }
}

string pkName = GetPrimaryKeyName();
if (pkName != null) {
#>
							<td style="text-align:center;">
								<div class="btn-group">
									<button class="btn btn-default btn-xs" type="button">Действия</button>
										<button data-toggle="dropdown" class="btn btn-xs btn-primary dropdown-toggle" type="button">
											<span class="caret"></span><span class="sr-only">Toggle Dropdown</span>
                                          </button>
											<ul role="menu" class="menu-event dropdown-menu">
												<li><a href="@Url.Action("edit", new {id=item.<#= pkName #> })">Редактировать</a></li>
                                                <li>
													<a href="@Url.Action("delete", new { id = item.<#= pkName #> })" onclick="if (confirm('удалить?')) { return true; } return false;">Удалить</a>
                                                 </li>
                                             </ul>
                               </div>
                           </td>
<#
} else {
#>
							<td style="text-align:center;">
								<div class="btn-group">
									<button class="btn btn-default btn-xs" type="button">Действия</button>
										<button data-toggle="dropdown" class="btn btn-xs btn-primary dropdown-toggle" type="button">
											<span class="caret"></span><span class="sr-only">Toggle Dropdown</span>
                                          </button>
											<ul role="menu" class="menu-event dropdown-menu">
												<li><a href="@Url.Action("edit", new {/* id=item.PrimaryKey */ })">Редактировать</a></li>
                                                <li>
													<a href="@Url.Action("delete", new {/* id=item.PrimaryKey */ })" onclick="if (confirm('удалить?')) { return true; } return false;">Удалить</a>
                                                 </li>
                                             </ul>
                               </div>
                           </td>
<#
}
#>
						</tr>
					}
				</tbody>
				<tfoot>
						<tr>
<#
foreach (PropertyMetadata property in properties) {
    if (property.Scaffold && !property.IsPrimaryKey && !property.IsForeignKey) {
#>
<#
        // We do not want to show any association properties for which there is
        // no associated foreign key.
        if (property.IsAssociation && GetRelatedModelMetadata(property) == null) {
            continue;
        }
#>
							<th>
								@Html.DisplayNameFor(model => model.<#= GetValueExpression(property) #>)
							</th>
<#
    }
}
#>
							<th></th>
						</tr>
				</tfoot>
				</table>
                </div>
            </div>
        </div>
    </div>
</div>


@section scripts
    {
    <script src="~/Areas/Admin/AdminInno/plagins/dataTables/jquery.dataTables.js"></script>
    <script src="~/Areas/Admin/AdminInno/plagins/dataTables/dataTables.bootstrap.js"></script>
    <script src="~/Areas/Admin/AdminInno/plagins/dataTables/dataTables.responsive.js"></script>
    <script src="~/Areas/Admin/AdminInno/plagins/dataTables/dataTables.tableTools.min.js"></script>
    <script>
        $(document).ready(function () {
            $('.dataTables-example').dataTable({
                responsive: true,
            });
        });
    </script>
}

<#
// The following code closes the tag used in the case of a view using a layout page and the body and html tags in the case of a regular view page
#>
<#
if(!IsPartialView && !IsLayoutPageSelected) {
    ClearIndent();
#>
</body>
</html>
<#
}
#>
<#@ include file="ModelMetadataFunctions.cs.include.t4" #>